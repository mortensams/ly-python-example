name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create reports directory
      run: mkdir -p reports
        
    - name: Lint with flake8
      continue-on-error: true
      run: |
        echo "=== Flake8 Linting Report ===" > reports/flake8_report.txt
        echo "Python files analyzed:" >> reports/flake8_report.txt
        find . -name "*.py" | grep -v "venv/" >> reports/flake8_report.txt
        echo "\nDetailed findings:" >> reports/flake8_report.txt
        flake8 . --count --statistics --show-source --max-line-length=100 --format="%(path)s:%(row)d:%(col)d: %(code)s %(text)s" >> reports/flake8_report.txt 2>&1 || true
        cat reports/flake8_report.txt
        
    - name: Static analysis with pylint
      continue-on-error: true
      run: |
        echo "=== Pylint Static Analysis Report ===" > reports/pylint_report.txt
        pylint --rcfile=setup.cfg $(git ls-files '*.py') --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" >> reports/pylint_report.txt 2>&1 || true
        cat reports/pylint_report.txt

    - name: Upload code quality reports
      uses: actions/upload-artifact@v3
      with:
        name: code-quality-reports
        path: reports/
        retention-days: 14

  build-and-test:
    needs: quality
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      run: docker build -t temperature-api .
      
    - name: Start API service
      run: |
        docker run -d -p 8000:8000 temperature-api
        echo "Waiting for API to start..."
        timeout 30 bash -c 'while ! curl -s http://localhost:8000/health; do sleep 1; done'
        
    - name: Run all tests
      run: |
        pip install pytest pytest-cov requests pandas numpy
        pytest tests/ --cov=. --cov-report=html:reports/coverage-html --cov-report=xml:reports/coverage.xml -v --junitxml=reports/junit.xml
        
    - name: Upload test reports
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: |
          reports/coverage-html/
          reports/coverage.xml
          reports/junit.xml
        retention-days: 14

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)